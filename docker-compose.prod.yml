version: '3.9'

services:
  # Reverse proxy Traefik
  traefik:
    image: traefik:v2.10
    command:
      - --api.dashboard=true
      - --api.insecure=false
      - --providers.docker=true
      - --providers.docker.exposedbydefault=false
      - --entrypoints.web.address=:80
      - --entrypoints.websecure.address=:443
      - --certificatesresolvers.letsencrypt.acme.tlschallenge=true
      - --certificatesresolvers.letsencrypt.acme.email=dev5minutespourmontpellier@gmail.com
      - --certificatesresolvers.letsencrypt.acme.storage=/letsencrypt/acme.json
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - ./letsencrypt:/letsencrypt
    networks:
      - app-network
    restart: unless-stopped
    labels:
      # Dashboard Traefik (optionnel)
      - "traefik.enable=true"
      - "traefik.http.routers.traefik.rule=Host(`traefik.applicitoyenne.fr`)"
      - "traefik.http.routers.traefik.entrypoints=websecure"
      - "traefik.http.routers.traefik.tls.certresolver=letsencrypt"
      - "traefik.http.routers.traefik.service=api@internal"

  # Frontend EmberJS
  frontend:
    build: ./speech-synthesis-frontend
    depends_on:
      - backend
    networks:
      - app-network
    restart: unless-stopped
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.frontend.rule=Host(`applicitoyenne.fr`)"
      - "traefik.http.routers.frontend.entrypoints=websecure"
      - "traefik.http.routers.frontend.tls.certresolver=letsencrypt"
      - "traefik.http.services.frontend.loadbalancer.server.port=80"
      # Redirection HTTP vers HTTPS
      - "traefik.http.routers.frontend-http.rule=Host(`applicitoyenne.fr`)"
      - "traefik.http.routers.frontend-http.entrypoints=web"
      - "traefik.http.routers.frontend-http.middlewares=redirect-to-https"
      - "traefik.http.middlewares.redirect-to-https.redirectscheme.scheme=https"

  # Backend FastAPI
  backend:
    build: ./speech-synthesis-backend
    environment:
      - MISTRAL_API_KEY=${MISTRAL_API_KEY}
      - DATABASE_URL=postgresql://speech_user:${DB_PASSWORD}@db:5432/speech_synthesis_db
    depends_on:
      - db
    networks:
      - app-network
    restart: unless-stopped
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.backend.rule=Host(`api.applicitoyenne.fr`)"
      - "traefik.http.routers.backend.entrypoints=websecure"
      - "traefik.http.routers.backend.tls.certresolver=letsencrypt"
      - "traefik.http.services.backend.loadbalancer.server.port=8000"
      # Redirection HTTP vers HTTPS pour l'API
      - "traefik.http.routers.backend-http.rule=Host(`api.applicitoyenne.fr`)"
      - "traefik.http.routers.backend-http.entrypoints=web"
      - "traefik.http.routers.backend-http.middlewares=redirect-to-https"

  # Base de données PostgreSQL
  db:
    image: postgres:15
    environment:
      POSTGRES_DB: speech_synthesis_db
      POSTGRES_USER: speech_user
      POSTGRES_PASSWORD: ${DB_PASSWORD}
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./speech-synthesis-backend/app/database/db.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - app-network
    restart: unless-stopped
    ports:
      - "5432:5432"  # Accessible pour psql
    # Pas d'exposition de port pour la sécurité

volumes:
  postgres_data:

networks:
  app-network:
    driver: bridge
    
    
    
    
